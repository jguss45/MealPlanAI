{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joegu\\\\OneDrive\\\\Desktop\\\\Projects\\\\MealPlanAI\\\\client\\\\src\\\\components\\\\SubmitButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSnapshot } from 'valtio';\nimport Loader from './Loader';\nimport config from '../config/config';\nimport state from '../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SubmitButton = prompt => {\n  _s();\n  const snap = useSnapshot(state);\n  const [loading, setLoading] = useState(false); //to show user 'sending' or not after they submit\n\n  const handleSubmit = async () => {\n    //need something here to ensure all fields of form are filled out before api call\n    if (!snap.formCheck) {\n      alert(\"Please fill out all form fields before submitting.\");\n    }\n    console.log(\"logging prompt before api call----------------\");\n    console.log(prompt);\n    try {\n      const response = await fetch(config.development.backendUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt\n        })\n      });\n      const data = await response.json();\n      state.mealPlan = data.plan; //text response to be shown to user\n    } catch (error) {\n      alert(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-tertiary py-3 px-8 outline-none w-fit text-white font-bold shadow-md shadow-primary rounded-xl\",\n      onClick: handleSubmit,\n      children: loading ? 'Sending...' : 'Submit '\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(SubmitButton, \"3nMmV1HI+WHjDnoZZ786w+5TSe8=\", false, function () {\n  return [useSnapshot];\n});\n_c = SubmitButton;\nexport default SubmitButton;\nvar _c;\n$RefreshReg$(_c, \"SubmitButton\");","map":{"version":3,"names":["React","useState","useSnapshot","Loader","config","state","jsxDEV","_jsxDEV","SubmitButton","prompt","_s","snap","loading","setLoading","handleSubmit","formCheck","alert","console","log","response","fetch","development","backendUrl","method","headers","body","JSON","stringify","data","json","mealPlan","plan","error","children","type","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/joegu/OneDrive/Desktop/Projects/MealPlanAI/client/src/components/SubmitButton.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport { useSnapshot } from 'valtio';\r\n\r\nimport Loader from './Loader';\r\nimport config from '../config/config';\r\nimport state from '../store';\r\n\r\nconst SubmitButton = (prompt) => {\r\n  const snap = useSnapshot(state);\r\n\r\n  const [loading, setLoading] = useState(false); //to show user 'sending' or not after they submit\r\n\r\n  const handleSubmit = async () => {\r\n    //need something here to ensure all fields of form are filled out before api call\r\n    if (!snap.formCheck) {\r\n      alert(\"Please fill out all form fields before submitting.\")\r\n    }\r\n    console.log(\"logging prompt before api call----------------\")\r\n    console.log(prompt)\r\n    try {\r\n\r\n      const response = await fetch(config.development.backendUrl, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          prompt,\r\n        })\r\n      })\r\n      \r\n      const data = await response.json();\r\n\r\n      state.mealPlan = data.plan //text response to be shown to user\r\n\r\n    } catch (error) {\r\n      alert(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* Submit form button */}\r\n      <button\r\n        type='submit'\r\n        className='bg-tertiary py-3 px-8 outline-none w-fit text-white font-bold shadow-md shadow-primary rounded-xl'\r\n        onClick={handleSubmit}\r\n      >\r\n        {loading ? 'Sending...' : 'Submit '}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubmitButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,WAAW,QAAQ,QAAQ;AAEpC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAIC,MAAM,IAAK;EAAAC,EAAA;EAC/B,MAAMC,IAAI,GAAGT,WAAW,CAACG,KAAK,CAAC;EAE/B,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/C,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA,IAAI,CAACH,IAAI,CAACI,SAAS,EAAE;MACnBC,KAAK,CAAC,oDAAoD,CAAC;IAC7D;IACAC,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;IAC7DD,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;IACnB,IAAI;MAEF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAChB,MAAM,CAACiB,WAAW,CAACC,UAAU,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBlB;QACF,CAAC;MACH,CAAC,CAAC;MAEF,MAAMmB,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElCxB,KAAK,CAACyB,QAAQ,GAAGF,IAAI,CAACG,IAAI,EAAC;IAE7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdhB,KAAK,CAACgB,KAAK,CAAC;IACd;EACF,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,eAEE1B,OAAA;MACE2B,IAAI,EAAC,QAAQ;MACbC,SAAS,EAAC,mGAAmG;MAC7GC,OAAO,EAAEtB,YAAa;MAAAmB,QAAA,EAErBrB,OAAO,GAAG,YAAY,GAAG;IAAS;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC9B,EAAA,CA7CIF,YAAY;EAAA,QACHN,WAAW;AAAA;AAAAuC,EAAA,GADpBjC,YAAY;AA+ClB,eAAeA,YAAY;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}